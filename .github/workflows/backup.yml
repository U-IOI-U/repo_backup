# This is a basic workflow that is manually triggered

name: Backup Repo

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  schedule:
    - cron: 0 1 * * 1
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y ca-certificates apt-transport-https build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip file python3 python3-distutils openssh-client
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Clone Repo
      run: |
        grep -E "^\| [0-9]" README.md | awk -F '|' '{print $3 $4 $5}' | while read a b c; do
          if [ "$a" = "" -o "$b" = "" ]; then
            continue
          fi
          if [ "$c" != 'true' ]; then
            continue
          fi
          echo "Clone Repo [ $a <= $b ]"
          git clone -q "$b" "$a"
          if [ "$?" = "0" ]; then
            echo "Tar   Repo [ $a ]"
            tar -cf /workdir/$a.tar $a
          fi
        done

    - name: Compression Repo
      run: |
        for pkg in `find /workdir/ -name '*.tar' 2>/dev/null`; do
          if [ -f "$pkg" ]; then
            echo "Compression [ $pkg ]"
            xz -z "$pkg"
          fi
        done

    - name: Upload file to Release
      uses: ncipollo/release-action@main
      with:
        tag: ${{ env.COMPILE_STARTINGTIME }}
        makeLatest: true
        artifacts: /workdir/*
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          Backup Repo!
